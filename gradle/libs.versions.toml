[versions]
# Define the dependency versions
android = "8.0.0"
arkivanov_parcelable= "1.0.0"
atomicfu = "0.17.2"
compose = "1.4.0"
compose_activity = "1.7.1"
coroutines_version = "1.6.4"
decompose-router = "0.1.0"
decompose_extension_version = "1.0.0-compose-experimental"
decompose_version = "2.0.0-alpha-01"
jetbrain_jvm = "1.8.0"
koin = "3.4.0"
koin_compose = "1.0.2"
kotlin = "1.8.10"
kotlin_datetime = "0.4.0"
kotlin_serialization = "1.8.21"
kotlinx-serialization = "1.5.0"
kstore = "0.6.0"
ktor = "2.2.4"
lifeCycle = "1.0.0"
molecule = "0.9.0"
sql_delight = "1.5.5"
swipe_refresh = "0.31.4-beta"
toolchain = "0.4.0"

qdsfdhvh-image-loader = "1.4.0"

[libraries]
# Define the libraries
arkivanov_decompose = { group = "com.arkivanov.decompose", name = "decompose", version.ref = "decompose_version" }
arkivanov_decompose-android = { group = "com.arkivanov.decompose", name = "extensions-android", version.ref = "decompose_version" }
arkivanov_decompose-extension = { group = "com.arkivanov.decompose", name = "extensions-compose-jetbrains", version.ref = "decompose_extension_version" }
arkivanov_lifecycle = { group = "com.arkivanov.essenty", name = "lifecycle", version.ref = "lifeCycle" }
arkivanov_parcelable = { group = "com.arkivanov.essenty", name = "parcelable", version.ref = "arkivanov_parcelable" }
compose_activity = { group = "androidx.activity", name = "activity-compose", version.ref = "compose_activity" }
compose_icons = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" }
compose_material = { module = "androidx.compose.material:material", version.ref = "compose" }
compose_tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose_ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
decompose-router = { module = "io.github.xxfast:decompose-router", version.ref = "decompose-router" }
koin_android = { group = "io.insert-koin", name = "koin-android", version.ref = "koin" }
koin_compose = { group = "io.insert-koin", name = "koin-compose", version.ref = "koin_compose" }
koin_core = { group = "io.insert-koin", name = "koin-core", version.ref = "koin" }
kotlin_atomicfu = { group = "org.jetbrains.kotlinx", name = "atomicfu", version.ref = "atomicfu" }
kotlin_corotines = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines_version" }
kotlin_datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlin_datetime" }
kotlin_serialization = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-core", version.ref = "kotlin_serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kstore = { module = "io.github.xxfast:kstore", version.ref = "kstore" }
kstore-file = { module = "io.github.xxfast:kstore-file", version.ref = "kstore" }
ktor_client = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
ktor_client_andriod = { group = "io.ktor", name = "ktor-client-android", version.ref = "ktor" }
ktor_client_ios = { group = "io.ktor", name = "ktor-client-darwin", version.ref = "ktor" }
ktor_client_okhttp = { group = "io.ktor", name = "ktor-client-okhttp", version.ref = "ktor" }
ktor_core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor_logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
ktor_serialization = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
molecule-gradle-plugin = { module = "app.cash.molecule:molecule-gradle-plugin", version.ref = "molecule" }
molecule-runtime = { module = "app.cash.molecule:molecule-runtime", version.ref = "molecule" }
qdsfdhvh-image-loader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "qdsfdhvh-image-loader" }
sql-delight_android = { group = "com.squareup.sqldelight", name = "android-driver", version.ref = "sql_delight" }
sql-delight_gradle = { group = "com.squareup.sqldelight", name = "gradle-plugin", version.ref = "sql_delight" }
sql-delight_ios = { group = "com.squareup.sqldelight", name = "native-driver", version.ref = "sql_delight" }
swipe-refresh = { group = "com.google.accompanist", name = "accompanist-swiperefresh", version.ref = "swipe_refresh" }
sql-delight_runtime = { group = "com.squareup.sqldelight", name = "runtime", version.ref = "sql_delight" }

[bundles]
# Define bundles/groups of libraries
compose = ["compose.ui", "compose.material", "compose.tooling", "compose.icons"]

[plugins]
android-application = { id = "com.android.application", version.ref = "android" }
android_library = { id = "com.android.library", version.ref = "android" }
cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
jetbrain_koltin = { id = "org.jetbrains.kotlin.jvm", version.ref = "jetbrain_jvm" }
kotlin-kept = { id = "org.jetbrains.kotlinx.kotlin-kapt",version.ref = "kotlin"  }
multiplatfrom = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
toolchain = { id = "org.gradle.toolchains.foojay-resolver-convention", version.ref = "toolchain" }


#cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }

#multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }

#compose = { id = "org.jetbrains.compose", version.ref = "compose" }
#android-application = { id = "com.android.application", version.ref = "agp" }
#libres = { id = "io.github.skeptick.libres", version.ref = "libres" }
#buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildConfig" }